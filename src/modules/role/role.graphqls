type Permission {
    objectType: String!
    read: Boolean!
    create: Boolean!
    update: Boolean!
    delete: Boolean!
}

type Role {
    id: Int!
    name: String!
    permissions: [Permission!]
}

extend type Query {
    allRoles: [Role!]
}

input PermissionInput {
    objectType: String!
    create: Boolean!
    read: Boolean!
    update: Boolean!
    delete: Boolean!
}

input RoleInput {
    name: String!
    permissions: [PermissionInput!]!
}

extend type Mutation {
    createRole(role: RoleInput!): Role!
    updateRole(id: Int!, role: RoleInput!): Role!
    connectRolesAndUsers(roleIds: [Int!]!, userIds: [Int!]!): Boolean!
    disconnectRolesAndUsers(roleIds: [Int!]!, userIds: [Int!]!): Boolean!
}